@page "/View/{Id:int}"
@using Model
@using Data
@using Authorization

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IFamilyService FamilyServices
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
    <h1>Address:</h1> 
     <label class="font-italic">@family.StreetName  @family.HouseNumber</label>
    <p></p>
    @if(adults.Count==0)
    {
        <h2>No adults</h2>
    }
    else{
<h1>Adults</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>HairColor</th>
                <th>EyeColor</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Height</th>
                <th>Sex</th>
                <th>Job</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in adults)
            {
                <tr>
                    <td>@item?.Id</td>
                    <td>@item?.FirstName</td>
                    <td>@item?.LastName</td>
                    <td>@item?.HairColor</td>
                    <td>@item?.EyeColor</td>
                    <td>@item?.Age</td>
                    <td>@item?.Weight</td>
                    <td>@item?.Height</td>
                    <td>@item?.Sex</td>
                    <td>@item?.JobTitle.JobTitle</td>
                </tr>
            }
        </tbody>
    </table>
    }
    <label @onclick="@(() => AddAdultTo(family.Id))" type="button" class="btn btn-success">Add adult</label>
    <p></p>
    @if(children.Count==0)
    {
        <h2>No children</h2>
    }
    else{
        <h1>Children</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>HairColor</th>
                <th>EyeColor</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Height</th>
                <th>Sex</th>
                <th>Interest</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in children)
            {
                <tr>
                    <td>@item?.Id</td>
                    <td>@item?.FirstName</td>
                    <td>@item?.LastName</td>
                    <td>@item?.HairColor</td>
                    <td>@item?.EyeColor</td>
                    <td>@item?.Age</td>
                    <td>@item?.Weight</td>
                    <td>@item?.Height</td>
                    <td>@item?.Sex</td>
                    @if(item.Interests.Count != 0)
                    {
                        <td>@foreach (var interest in item?.Interests){
                        <p>@interest?.Type -> @interest?.Description</p>
                        }
                    </td>
                    }      
                    <td><label @onclick="@(() => AddInterestTo(@item.Id))" type="button" class="btn btn-success">Add Interest</label></td>             
                </tr>
            }
        </tbody>
    </table>
    }
    <label @onclick="@(() => AddChildTo(family.Id))" type="button" class="btn btn-success">Add child</label>
 <br/>
 <p></p>
@if(pets.Count==0)
{
    <h2>No family pets</h2>
} else{
<h1>Family Pets</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Species</th>
                <th>Name</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in family.Pets)
            {
                <tr>
                    <td>@item?.Id</td>
                    <td>@item?.Species</td>
                    <td>@item?.Name</td>
                    <td>@item?.Age</td>
                </tr>
            }
        </tbody>
    </table>
}
<label @onclick="@(() => AddPetsTo(family.Id))" type="button" class="btn btn-success">Add pets</label>
   
</Authorized>
</AuthorizeView>
@code{
    [Parameter]
    public int Id {get;set;}
    private Family family {get;set;}
    private List<Adult> adults {get;set;}
    private List<Child> children {get; set;}
    private List<Pet> pets {get;set;}

    protected override async Task OnInitializedAsync()
    {
        IList<Family> f = FamilyServices.Families;
        family = f.First(adul => adul.Id == Id);
        adults = family.Adults;
        children = family.Children;
        pets = family.Pets;
    }

    public async Task AddAdultTo(int id)
    {
        NavigationManager.NavigateTo($"/addAdultTo/{id}");
    }
    public async Task AddChildTo(int id)
    {
        NavigationManager.NavigateTo($"/addChildTo/{id}");
    }
    public async Task AddPetsTo(int id)
    {
        NavigationManager.NavigateTo($"/addPetTo/{id}");
    }

    public async Task AddInterestTo(int id)
    {
        NavigationManager.NavigateTo($"/{Id}/addInterestTo/{id}");
    }

}